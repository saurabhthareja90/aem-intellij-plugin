<!--suppress XmlUnboundNsPrefix -->
<idea-plugin url="https://github.com/karollewandowski/aem-intellij-plugin">
    <id>co.nums.intellij.aem</id>
    <name>AEM IntelliJ Plugin</name>
    <version>0.8.2</version>
    <vendor url="https://github.com/karollewandowski">Karol Lewandowski</vendor>

    <description><![CDATA[
        <strong>Intellij Platform plugin for Adobe Experience Manager</strong>
        <br/>
        <br/>
        <a href="https://github.com/karollewandowski/aem-intellij-plugin">GitHub</a> |
        <a href="https://github.com/karollewandowski/aem-intellij-plugin/issues">Bug Tracker</a> |
        <a href="https://www.paypal.me/klewandowski86">Donate with PayPal</a>
        <br/>
        <br/>
        Features:<br>
        <ul>
            <li>JCR roots auto-detection
            <li>HTL/Sightly support (HTML files under <code>jcr_root</code> directory)
                <ul>
                    <li>syntax validation and highlighting</li>
                    <li>auto-completion, inspections and documentation for:
                        <ul>
                            <li>block attributes (<code>data-sly-*</code>)</li>
                            <li>global objects (<code>properties</code>, <code>currentPage</code>, <code>wcmmode</code>, etc.)</li>
                            <li>properties (<code>jcr:title</code>, <code>cq:lastModified</code>, <code>sling:resourceType</code>, etc.)</li>
                            <li>built-in expression options (<code>context</code>, <code>addSelector</code>, <code>i18n</code>, etc.)</li>
                            <li>display contexts (<code>html</code>, <code>scriptToken</code>, <code>unsafe</code>, etc.)</li>
                            <li>use objects (Use API objects and Sling Models)</li>
                            <li>block variables (eg. <code>data-sly-use.variable</code>)</li>
                            <li>template parameters (eg. <code>data-sly-template.myTemplate="${ @ param1, param2}"</code>)</li>
                        </ul>
                    </li>
                </ul>
            </li>
        </ul>
        <p>
            <i>If you find the plugin helpful and it boosts your productivity, please consider PayPal donation,
            so I can stay motivated and provide new features faster.</i>
        </p>
    ]]></description>

    <change-notes><![CDATA[
        Bug fixes:
        <ul>
            <li>Fix ternary operator parsing</li>
            <li>Fix icon sizes</li>
        </ul>
        Full release details can be found on Github: https://github.com/karollewandowski/aem-intellij-plugin/releases/tag/v0.8.2
    ]]></change-notes>

    <idea-version since-build="143"/>

    <depends>com.intellij.modules.lang</depends>
    <depends optional="true" config-file="java.xml">com.intellij.modules.java</depends>

    <extensions defaultExtensionNs="com.intellij">
        <postStartupActivity
                implementation="co.nums.intellij.aem.settings.SetAemVersionNotifier"
                order="last"/>

        <applicationService
                serviceInterface="co.nums.intellij.aem.service.PluginInfoProvider"
                serviceImplementation="co.nums.intellij.aem.service.PluginInfoProviderImpl"/>

        <applicationService
                serviceInterface="co.nums.intellij.aem.errorreports.GitHubIssueService"
                serviceImplementation="co.nums.intellij.aem.errorreports.GitHubIssueServiceImpl"/>

        <projectService
                serviceImplementation="co.nums.intellij.aem.service.JcrRoots"/>

        <projectService
                serviceImplementation="co.nums.intellij.aem.settings.AemSettings"/>

        <projectConfigurable
                instance="co.nums.intellij.aem.settings.AemProjectConfigurable"
                displayName="AEM IntelliJ Plugin"
                groupId="other"/>

        <iconProvider
                implementation="co.nums.intellij.aem.icons.providers.JcrRootIconProvider"
                order="first"/>

        <fileTypeFactory
                implementation="co.nums.intellij.aem.htl.file.HtlFileTypeFactory"/>

        <fileBasedIndex
                implementation="co.nums.intellij.aem.htl.index.HtlTemplatesIndex"/>

        <iconProvider
                implementation="co.nums.intellij.aem.htl.file.HtlIconProvider"/>

        <html.scriptContentProvider
                language="HTL"
                implementationClass="com.intellij.lang.HtmlScriptContentProvider$Empty"/>

        <lang.parserDefinition
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.parser.HtlParserDefinition"/>

        <lang.fileViewProviderFactory
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.file.HtlFileViewProviderFactory"/>

        <completion.contributor
                language="HTML"
                implementationClass="co.nums.intellij.aem.htl.completion.contributor.HtmlCompletionContributor"/>
        <completion.contributor
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.completion.contributor.HtlCompletionContributor"/>

        <lang.documentationProvider
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.documentation.HtlDocumentationProvider"/>

        <lang.substitutor
                language="HTML"
                implementationClass="co.nums.intellij.aem.htl.file.HtlLanguageSubstitutor"/>

        <lang.syntaxHighlighterFactory
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.highlighting.HtlSyntaxHighlighterFactory"/>
        <annotator
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.highlighting.HtlIdentifiersHighlighter"/>
        <annotator
                id="htlBlocksHighlighter"
                language="HTML"
                implementationClass="co.nums.intellij.aem.htl.highlighting.HtlBlocksHighlighter"/>
        <annotator
                id="htlUseDeclarationsHighlighter"
                language="HTML"
                implementationClass="co.nums.intellij.aem.htl.highlighting.HtlUseDeclarationsHighlighter"/>
        <additionalTextAttributes
                scheme="Default"
                file="colorSchemes/HtlDefault.xml"/>
        <additionalTextAttributes
                scheme="Darcula"
                file="colorSchemes/HtlDarcula.xml"/>

        <lang.formatter
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.formatter.HtlFormattingModelBuilder"/>

        <lang.commenter
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.editor.comments.HtlCommenter"/>

        <backspaceHandlerDelegate
                implementation="co.nums.intellij.aem.htl.editor.actions.backspace.HtlExpressionBackspaceHandler"/>
        <backspaceHandlerDelegate
                implementation="co.nums.intellij.aem.htl.editor.actions.backspace.HtlSingleQuotedStringBackspaceHandler"/>
        <backspaceHandlerDelegate
                implementation="co.nums.intellij.aem.htl.editor.actions.backspace.HtlDoubleQuotedStringBackspaceHandler"/>
        <quoteHandler
                fileType="HTL"
                className="co.nums.intellij.aem.htl.editor.actions.HtlQuoteHandler"/>
        <lang.braceMatcher
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.editor.braces.HtlBraceMatcher"/>

        <annotator
                language="HTL"
                implementationClass="co.nums.intellij.aem.htl.inspections.HtlWrongStringQuotesAnnotator"/>
        <annotator
                language="HTML"
                implementationClass="co.nums.intellij.aem.htl.inspections.HtlIncorrectBlockTypeAnnotator"
                order="after htlBlocksHighlighter"/>
        <annotator
                language="HTML"
                implementationClass="co.nums.intellij.aem.htl.inspections.DisallowedHtlAttributeBlockAnnotator"
                order="after htlBlocksHighlighter"/>

        <lang.elementManipulator
                forClass="co.nums.intellij.aem.htl.psi.HtlVariable"
                implementationClass="co.nums.intellij.aem.htl.psi.manipulator.HtlVariableManipulator"/>

        <psi.referenceContributor
                language="HTML"
                implementation="co.nums.intellij.aem.htl.psi.references.HtlVariableReferenceContributor"/>
        <!--
        <psi.referenceContributor
                language="HTL"
                implementation="co.nums.intellij.aem.htl.psi.references.HtlGlobalObjectsReferencesContributor"/>
        -->

        <!--  -->
        <!--
        <referencesSearch
                order="first"
                implementation="co.nums.intellij.aem.htl.psi.references.HtlVariableReferencesSearch"/>
        -->

        <!--<useScopeEnlarger implementation="co.nums.intellij.aem.htl.psi.references.HtlDeclarationSearchScopeEnlarger"/>-->
        <!--<useScopeOptimizer implementation="co.nums.intellij.aem.htl.psi.references.HtlDeclarationSearchScopeOptimizer"/>-->

        <readWriteAccessDetector
                implementation="co.nums.intellij.aem.htl.highlighter.HtlReadWriteAccessDetector"/>

        <!-- FIXME: it breaks attribute highlighting if cursor is at some beginning position -->
        <!--
        <lang.findUsagesProvider
                language="HTML"
                order="first"
                implementationClass="co.nums.intellij.aem.htl.findusages.HtlVariablesFindUsagesProvider"/>
        -->

        <!--<findUsagesHandlerFactory implementation="co.nums.intellij.aem.htl.findusages.HtmlAttributeUsagesProvider"/>-->

        <renamePsiElementProcessor
                order="before xmlAttribute"
                implementation="co.nums.intellij.aem.htl.refactoring.RenameHtlVariableProcessor"/>

        <nameSuggestionProvider
                order="first"
                implementation="co.nums.intellij.aem.htl.refactoring.HtlVariableNameSuggestionProvider"/>

        <problemFileHighlightFilter
                implementation="co.nums.intellij.aem.htl.file.HtlProblemFileHighlightFilter"/>

        <errorHandler
                implementation="co.nums.intellij.aem.errorreports.GitHubErrorReportSubmitter"/>
    </extensions>

    <actions>
        <action
                id="co.nums.intellij.aem.action.MarkAsJcrRootAction"
                class="co.nums.intellij.aem.action.MarkAsJcrRootAction"
                text="JCR Root">
            <add-to-group group-id="MarkRootGroup" anchor="last"/>
        </action>

        <action
                id="co.nums.intellij.aem.errorreports.TestExceptionAction"
                class="co.nums.intellij.aem.errorreports.TestExceptionAction"
                text="___ThrowTestException___">
        </action>
    </actions>

</idea-plugin>
